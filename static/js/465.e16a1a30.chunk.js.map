{"version":3,"file":"static/js/465.e16a1a30.chunk.js","mappings":"6OACA,EAA4B,8BAA5B,EAAiE,yBAAjE,EAAmG,2BAAnG,EAA6I,iCAA7I,EAAsL,0B,SCwCtL,EArCkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAUL,SAPV,SAAAM,GACnBA,EAAMC,iBACNP,EAASE,EACV,EAIG,WACE,mBAAQM,KAAK,SAASJ,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACED,UAAWC,EACXG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOV,EACPW,SAvBa,SAAAP,GACnBH,EAASG,EAAMQ,OAAOF,MACvB,QA0BF,E,iBCUD,EAxCe,SAAC,GAAoB,IAAD,IAAjBG,MAAAA,OAAiB,MAAT,GAAS,EACjC,GAA0Bd,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAgChB,EAAAA,EAAAA,UAAS,MAAzC,eAAOiB,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKlB,EACL,IACE,IAAMmB,EAAW,mCAAG,uGACUC,EAAAA,EAAAA,IAAUpB,GADpB,gBACVqB,EADU,EACVA,UACRN,GAAU,SAAAO,GAAU,wBAAQA,IAAR,OAAuBD,GAAvB,IAFF,2CAAH,qDAIjBF,GAGD,CAFC,MAAOH,GACPC,EAAeD,EAAMO,QACtB,CACF,GAAE,CAACvB,IAUJ,OACE,4BACE,SAAC,EAAD,CAAWF,SAVM,SAAAE,GACL,KAAVA,EACFwB,MAAM,yBAENvB,EAASD,GACTe,EAAU,IAEb,IAIID,EAAOW,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAId,EAAK,iBAAaa,EAAME,IAAnB,UAA6BF,EAAME,IAAlD,SACGF,EAAMG,SAFFH,EAAME,GADA,IAOhBZ,IAAS,0CAAUA,EAAV,yBAGf,C,+IC1CKc,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOd,EAAS,mCAAG,WAAMpB,GAAN,kFACjBmC,EADiB,0DACwCnC,EADxC,wDAEAoC,EAAAA,EAAAA,GAAMD,EAAKL,GAFX,cAEjBO,EAFiB,OAGjBvB,EAASuB,EAASC,KAAKC,QAHN,kBAKhB,CACLlB,UAAWP,EAAOW,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,MAND,2CAAH,sDAUTW,EAAY,mCAAG,4FACd,+DADc,UAEHJ,EAAAA,EAAAA,GADX,+DACsBN,GAFR,cAEpBO,EAFoB,OAGpBI,EAAWJ,EAASC,KAAKC,QAHL,kBAKnB,CACLG,aAAcD,EAAShB,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,MANH,2CAAH,qDAUZc,EAAU,mCAAG,WAAMf,GAAN,kFAClBO,EADkB,6CAC0BP,EAD1B,6BAEDQ,EAAAA,EAAAA,GAAMD,EAAKL,GAFV,cAElBO,EAFkB,OAGlBO,EAAUP,EAASC,KAAKC,QAC9BM,QAAQC,IAAIF,GAJY,kBAKjBA,GALiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/searchform/Searchform.module.css?015c","components/searchform/SearchForm.jsx","pages/Movies.jsx","service/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchform_searchbar__756E7\",\"form\":\"Searchform_form__-nmYl\",\"button\":\"Searchform_button__V0B16\",\"button_label\":\"Searchform_button_label__QWQlK\",\"input\":\"Searchform_input__8bqfI\"};","import { useState } from 'react';\nimport css from './Searchform.module.css';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.button}>\n          <span className={css.button_label}>Search</span>\n        </button>\n\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/searchform/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovies } from 'service/service';\n\nconst Movies = ({ place = '' }) => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setMoviesError] = useState(null);\n\n  useEffect(() => {\n    if (!query) return;\n    try {\n      const fetchMovies = async () => {\n        const { movieData } = await getMovies(query);\n        setMovies(prevMovies => [...prevMovies, ...movieData]);\n      };\n      fetchMovies();\n    } catch (error) {\n      setMoviesError(error.message);\n    }\n  }, [query]);\n\n  const handleSubmit = query => {\n    if (query === '') {\n      alert('Please enter a query');\n    } else {\n      setQuery(query);\n      setMovies([]);\n    }\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={place ? `movies/${movie.id}` : `${movie.id}`}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n      {error && <>Sorry. {error} ... ðŸ˜­</>}\n    </div>\n  );\n};\nexport default Movies;\n","//developer.themoviedb.org/docs/image-basics\nimport axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYzBjM2Q3N2ZiNjkwMzViNDdlYTRjYmUwYmYzZWM1OSIsInN1YiI6IjY0N2M4MmZlY2Y0YjhiMDBjM2QyYjEyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GuJ4Ukill7vzS2qgRjDdTLXHToQTjbtbSSxv_l3b6Pc',\n  },\n};\nexport const getMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  const response = await axios(url, options);\n  const movies = response.data.results;\n  // console.log(movies);\n  return {\n    movieData: movies.map(({ id, title }) => ({ id, title })),\n  };\n};\n\nexport const getAllmovies = async () => {\n  const url = 'https://api.themoviedb.org/3/trending/all/day?language=en-US';\n  const response = await axios(url, options);\n  const trending = response.data.results;\n  // console.log(trending);\n  return {\n    trendingData: trending.map(({ id, title }) => ({ id, title })),\n  };\n};\n\nexport const getMovieId = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n  const response = await axios(url, options);\n  const movieId = response.data.results;\n  console.log(movieId);\n  return movieId;\n};\n\nexport const getCredits = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n  const response = await axios(url, options);\n  const credits = response.data.results;\n  return credits;\n};\n\nexport const getMovieIdReviews = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`;\n  const response = await axios(url, options);\n  const reviews = response.data.results;\n  return reviews;\n};\n"],"names":["onSubmit","useState","query","setQuery","className","css","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","place","movies","setMovies","error","setMoviesError","useEffect","fetchMovies","getMovies","movieData","prevMovies","message","alert","map","movie","to","id","title","options","method","headers","accept","Authorization","url","axios","response","data","results","getAllmovies","trending","trendingData","getMovieId","movieId","console","log"],"sourceRoot":""}