{"version":3,"file":"static/js/751.47e64ec9.chunk.js","mappings":"yMACA,EAAwB,wBAAxB,EAAuD,uB,SCyBvD,EAtBiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IACEH,EAAKI,aAAL,8CAC2CJ,EAAKI,c,qkHAGlDC,IAAKL,EAAKM,QAEZ,wBAAKN,EAAKM,QACV,0CAAkBN,EAAKO,eAG5B,E,kBCnBD,EAAuB,mBCuBvB,EAnBa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GACLO,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAZ,IACTK,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACT,KAGF,eAAIP,UAAWC,EAAf,gBACGS,QADH,IACGA,OADH,EACGA,EAAMX,KAAKmB,KAAI,SAAAnB,GAAI,OAClB,yBACE,SAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKoB,GADI,KAOzB,C,+LCtBKC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAS,mCAAG,WAAMC,GAAN,kFACjBC,EADiB,0DACwCD,EADxC,wDAEAE,EAAAA,EAAAA,GAAMD,EAAKP,GAFX,cAEjBS,EAFiB,OAGjBC,EAASD,EAASnB,KAAKqB,QAHN,kBAIhB,CACLC,UAAWF,EAAOZ,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBc,MAA1B,EAAOA,MAAP,MALD,2CAAH,sDASTC,EAAY,mCAAG,4FACd,iEADc,UAEHN,EAAAA,EAAAA,GADX,iEACsBR,GAFR,cAEpBS,EAFoB,OAGpBM,EAAWN,EAASnB,KAAKqB,QAHL,kBAKnB,CACLK,aAAcD,EAASjB,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBc,MAA1B,EAAOA,MAAP,MANH,2CAAH,qDAUZI,EAAU,mCAAG,WAAMlB,GAAN,kFAClBQ,EADkB,6CAC0BR,EAD1B,6BAEDS,EAAAA,EAAAA,GAAMD,EAAKP,GAFV,uBAEhBV,EAFgB,EAEhBA,KAFgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAO,mCAAG,WAAMM,GAAN,kFACfQ,EADe,6CAC6BR,EAD7B,qCAEES,EAAAA,EAAAA,GAAMD,EAAKP,GAFb,uBAEbV,EAFa,EAEbA,KAFa,kBAIdA,GAJc,2CAAH,sDAOP4B,EAAiB,mCAAG,WAAMnB,GAAN,kFACzBQ,EADyB,6CACmBR,EADnB,4CAERS,EAAAA,EAAAA,GAAMD,EAAKP,GAFH,uBAEvBV,EAFuB,EAEvBA,KAFuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/cast/CastItem.module.css?0fdc","components/cast/CastItem.jsx","webpack://react-homework-template/./src/pages/cast/Cast.module.css?3f37","pages/cast/Cast.jsx","service/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"CastItem_image__T0F7I\",\"item\":\"CastItem_item__zkiIv\"};","// import PropTypes from 'prop-types';\nimport defaultImg from '../../data/noicon.png';\nimport css from './CastItem.module.css';\nimport PropTypes from 'prop-types';\nconst CastItem = ({ cast }) => {\n  return (\n    <div className={css.item}>\n      <img\n        className={css.image}\n        src={\n          cast.profile_path\n            ? `https://image.tmdb.org/t/p/original/${cast.profile_path}`\n            : defaultImg\n        }\n        alt={cast.name}\n      />\n      <h3>{cast.name}</h3>\n      <span>Character: {cast.character}</span>\n    </div>\n  );\n};\n\nCastItem.propTypes = {\n  cast: PropTypes.object.isRequired,\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__dG2Qj\"};","import { useState, useEffect } from 'react';\nimport CastItem from '../../components/cast/CastItem';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'service/service';\nimport css from './Cast.module.css';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getCast(movieId)\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  return (\n    <ul className={css.list}>\n      {data?.cast.map(cast => (\n        <li key={cast.id}>\n          <CastItem cast={cast} />\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYzBjM2Q3N2ZiNjkwMzViNDdlYTRjYmUwYmYzZWM1OSIsInN1YiI6IjY0N2M4MmZlY2Y0YjhiMDBjM2QyYjEyNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GuJ4Ukill7vzS2qgRjDdTLXHToQTjbtbSSxv_l3b6Pc',\n  },\n};\nexport const getMovies = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n  const response = await axios(url, options);\n  const movies = response.data.results;\n  return {\n    movieData: movies.map(({ id, title }) => ({ id, title })),\n  };\n};\n\nexport const getAllmovies = async () => {\n  const url = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n  const response = await axios(url, options);\n  const trending = response.data.results;\n\n  return {\n    trendingData: trending.map(({ id, title }) => ({ id, title })),\n  };\n};\n\nexport const getMovieId = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n  const { data } = await axios(url, options);\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n  const { data } = await axios(url, options);\n\n  return data;\n};\n\nexport const getMovieIdReviews = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`;\n  const { data } = await axios(url, options);\n\n  return data;\n};\n"],"names":["cast","className","css","src","profile_path","alt","name","character","movieId","useParams","useState","data","setData","useEffect","getCast","then","catch","error","console","map","id","options","method","headers","accept","Authorization","getMovies","query","url","axios","response","movies","results","movieData","title","getAllmovies","trending","trendingData","getMovieId","getMovieIdReviews"],"sourceRoot":""}